ARM GAS  C:\Users\rokko\AppData\Local\Temp\ccKniRtH.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0xx_hal_iwdg.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_IWDG_Init,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	HAL_IWDG_Init
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	HAL_IWDG_Init:
  26              	.LVL0:
  27              	.LFB40:
  28              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @file    stm32f0xx_hal_iwdg.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @brief   IWDG HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *          functionalities of the Independent Watchdog (IWDG) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *           + Initialization and Start functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *           + IO operation functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   @verbatim
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   ==============================================================================
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****                     ##### IWDG Generic features #####
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   ==============================================================================
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   [..]
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     (+) The IWDG can be started by either software or hardware (configurable
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         through option byte).
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     (+) The IWDG is clocked by the Low-Speed Internal clock (LSI) and thus stays
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         active even if the main clock fails.
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     (+) Once the IWDG is started, the LSI is forced ON and both cannot be
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         disabled. The counter starts counting down from the reset value (0xFFF).
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         When it reaches the end of count value (0x000) a reset signal is
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         generated (IWDG reset).
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     (+) Whenever the key value 0x0000 AAAA is written in the IWDG_KR register,
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         the IWDG_RLR value is reloaded into the counter and the watchdog reset
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         is prevented.
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
ARM GAS  C:\Users\rokko\AppData\Local\Temp\ccKniRtH.s 			page 2


  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     (+) The IWDG is implemented in the VDD voltage domain that is still functional
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         in STOP and STANDBY mode (IWDG reset can wake up the CPU from STANDBY).
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         IWDGRST flag in RCC_CSR register can be used to inform when an IWDG
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         reset occurs.
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     (+) Debug mode: When the microcontroller enters debug mode (core halted),
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         the IWDG counter either continues to work normally or stops, depending
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         on DBG_IWDG_STOP configuration bit in DBG module, accessible through
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         __HAL_DBGMCU_FREEZE_IWDG() and __HAL_DBGMCU_UNFREEZE_IWDG() macros.
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     [..] Min-max timeout value @32KHz (LSI): ~125us / ~32.7s
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          The IWDG timeout may vary due to LSI clock frequency dispersion.
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          STM32F0xx devices provide the capability to measure the LSI clock
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          frequency (LSI clock is internally connected to TIM16 CH1 input capture).
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          The measured value can be used to have an IWDG timeout with an
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          acceptable accuracy.
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     [..] Default timeout value (necessary for IWDG_SR status register update):
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          Constant LSI_VALUE is defined based on the nominal LSI clock frequency.
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          This frequency being subject to variations as mentioned above, the
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          default timeout value (defined through constant HAL_IWDG_DEFAULT_TIMEOUT
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          below) may become too short or too long.
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          In such cases, this default timeout value can be tuned by redefining
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          the constant LSI_VALUE at user-application level (based, for instance,
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****          on the measured LSI clock frequency as explained above).
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****                      ##### How to use this driver #####
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   ==============================================================================
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   [..]
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     (#) Use IWDG using HAL_IWDG_Init() function to :
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (++) Enable instance by writing Start keyword in IWDG_KEY register. LSI
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****            clock is forced ON and IWDG counter starts counting down.
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (++) Enable write access to configuration registers:
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****           IWDG_PR, IWDG_RLR and IWDG_WINR.
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (++) Configure the IWDG prescaler and counter reload value. This reload
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****            value will be loaded in the IWDG counter each time the watchdog is
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****            reloaded, then the IWDG will start counting down from this value.
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (++) Depending on window parameter:
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         (+++) If Window Init parameter is same as Window register value,
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****              nothing more is done but reload counter value in order to exit
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****              function with exact time base.
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         (+++) Else modify Window register. This will automatically reload
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****              watchdog counter.
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (++) Wait for status flags to be reset.
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     (#) Then the application program must refresh the IWDG counter at regular
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         intervals during normal operation to prevent an MCU reset, using
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         HAL_IWDG_Refresh() function.
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****      *** IWDG HAL driver macros list ***
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****      ====================================
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****      [..]
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****        Below the list of most used macros in IWDG HAL driver:
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (+) __HAL_IWDG_START: Enable the IWDG peripheral
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (+) __HAL_IWDG_RELOAD_COUNTER: Reloads IWDG counter with value defined in
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****           the reload register
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
ARM GAS  C:\Users\rokko\AppData\Local\Temp\ccKniRtH.s 			page 3


  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   @endverbatim
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   ******************************************************************************
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @attention
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * All rights reserved.</center></h2>
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * the "License"; You may not use this file except in compliance with the
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * License. You may obtain a copy of the License at:
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *                        opensource.org/licenses/BSD-3-Clause
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   ******************************************************************************
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /* Includes ------------------------------------------------------------------*/
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** #include "stm32f0xx_hal.h"
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /** @addtogroup STM32F0xx_HAL_Driver
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @{
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** #ifdef HAL_IWDG_MODULE_ENABLED
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /** @addtogroup IWDG
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @brief IWDG HAL module driver.
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @{
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /* Private typedef -----------------------------------------------------------*/
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /* Private define ------------------------------------------------------------*/
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /** @defgroup IWDG_Private_Defines IWDG Private Defines
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @{
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /* Status register needs up to 5 LSI clock periods divided by the clock
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****    prescaler to be updated. The number of LSI clock periods is upper-rounded to
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****    6 for the timeout value calculation.
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****    The timeout value is calculated using the highest prescaler (256) and
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****    the LSI_VALUE constant. The value of this constant can be changed by the user
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****    to take into account possible LSI clock period variations.
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****    The timeout value is multiplied by 1000 to be converted in milliseconds.
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****    LSI startup time is also considered here by adding LSI_STARTUP_TIMEOUT
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****    converted in milliseconds. */
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** #define HAL_IWDG_DEFAULT_TIMEOUT        (((6UL * 256UL * 1000UL) / LSI_VALUE) + ((LSI_STARTUP_TIME 
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** #define IWDG_KERNEL_UPDATE_FLAGS        (IWDG_SR_WVU | IWDG_SR_RVU | IWDG_SR_PVU)
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /**
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @}
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /* Private macro -------------------------------------------------------------*/
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /* Private variables ---------------------------------------------------------*/
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /* Private function prototypes -----------------------------------------------*/
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /* Exported functions --------------------------------------------------------*/
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /** @addtogroup IWDG_Exported_Functions
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @{
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
ARM GAS  C:\Users\rokko\AppData\Local\Temp\ccKniRtH.s 			page 4


 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /** @addtogroup IWDG_Exported_Functions_Group1
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *  @brief    Initialization and Start functions.
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** @verbatim
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****  ===============================================================================
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****           ##### Initialization and Start functions #####
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****  ===============================================================================
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****  [..]  This section provides functions allowing to:
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (+) Initialize the IWDG according to the specified parameters in the
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****           IWDG_InitTypeDef of associated handle.
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (+) Manage Window option.
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (+) Once initialization is performed in HAL_IWDG_Init function, Watchdog
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****           is reloaded in order to exit function with correct time base.
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** @endverbatim
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @{
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /**
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @brief  Initialize the IWDG according to the specified parameters in the
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *         IWDG_InitTypeDef and start watchdog. Before exiting function,
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *         watchdog is refreshed in order to have correct time base.
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @param  hiwdg  pointer to a IWDG_HandleTypeDef structure that contains
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *                the configuration information for the specified IWDG module.
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @retval HAL status
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** HAL_StatusTypeDef HAL_IWDG_Init(IWDG_HandleTypeDef *hiwdg)
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** {
  29              		.loc 1 172 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   uint32_t tickstart;
  33              		.loc 1 173 3 view .LVU1
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* Check the IWDG handle allocation */
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   if (hiwdg == NULL)
  34              		.loc 1 176 3 view .LVU2
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   uint32_t tickstart;
  35              		.loc 1 172 1 is_stmt 0 view .LVU3
  36 0000 70B5     		push	{r4, r5, r6, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 16
  39              		.cfi_offset 4, -16
  40              		.cfi_offset 5, -12
  41              		.cfi_offset 6, -8
  42              		.cfi_offset 14, -4
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   uint32_t tickstart;
  43              		.loc 1 172 1 view .LVU4
  44 0002 041E     		subs	r4, r0, #0
  45              		.loc 1 176 6 view .LVU5
  46 0004 23D0     		beq	.L8
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   {
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     return HAL_ERROR;
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   }
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* Check the parameters */
ARM GAS  C:\Users\rokko\AppData\Local\Temp\ccKniRtH.s 			page 5


 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   assert_param(IS_IWDG_ALL_INSTANCE(hiwdg->Instance));
  47              		.loc 1 182 3 is_stmt 1 view .LVU6
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   assert_param(IS_IWDG_PRESCALER(hiwdg->Init.Prescaler));
  48              		.loc 1 183 3 view .LVU7
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   assert_param(IS_IWDG_RELOAD(hiwdg->Init.Reload));
  49              		.loc 1 184 3 view .LVU8
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   assert_param(IS_IWDG_WINDOW(hiwdg->Init.Window));
  50              		.loc 1 185 3 view .LVU9
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* Enable IWDG. LSI is turned on automatically */
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   __HAL_IWDG_START(hiwdg);
  51              		.loc 1 188 3 view .LVU10
  52 0006 0368     		ldr	r3, [r0]
  53 0008 154A     		ldr	r2, .L15
  54 000a 1A60     		str	r2, [r3]
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* Enable write access to IWDG_PR, IWDG_RLR and IWDG_WINR registers by writing
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   0x5555 in KR */
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   IWDG_ENABLE_WRITE_ACCESS(hiwdg);
  55              		.loc 1 192 3 view .LVU11
  56 000c 154A     		ldr	r2, .L15+4
  57 000e 1A60     		str	r2, [r3]
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* Write to IWDG registers the Prescaler & Reload values to work with */
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   hiwdg->Instance->PR = hiwdg->Init.Prescaler;
  58              		.loc 1 195 3 view .LVU12
  59              		.loc 1 195 23 is_stmt 0 view .LVU13
  60 0010 4268     		ldr	r2, [r0, #4]
  61 0012 5A60     		str	r2, [r3, #4]
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   hiwdg->Instance->RLR = hiwdg->Init.Reload;
  62              		.loc 1 196 3 is_stmt 1 view .LVU14
  63              		.loc 1 196 24 is_stmt 0 view .LVU15
  64 0014 8268     		ldr	r2, [r0, #8]
  65 0016 9A60     		str	r2, [r3, #8]
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* Check pending flag, if previous update not done, return timeout */
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   tickstart = HAL_GetTick();
  66              		.loc 1 199 3 is_stmt 1 view .LVU16
  67              		.loc 1 199 15 is_stmt 0 view .LVU17
  68 0018 FFF7FEFF 		bl	HAL_GetTick
  69              	.LVL1:
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* Wait for register to be updated */
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   while ((hiwdg->Instance->SR & IWDG_KERNEL_UPDATE_FLAGS) != 0x00u)
  70              		.loc 1 202 16 view .LVU18
  71 001c 2368     		ldr	r3, [r4]
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
  72              		.loc 1 199 15 view .LVU19
  73 001e 0600     		movs	r6, r0
  74              	.LVL2:
  75              		.loc 1 202 3 is_stmt 1 view .LVU20
  76              		.loc 1 202 9 view .LVU21
  77              		.loc 1 202 26 is_stmt 0 view .LVU22
  78 0020 DA68     		ldr	r2, [r3, #12]
  79              		.loc 1 202 9 view .LVU23
  80 0022 5207     		lsls	r2, r2, #29
  81 0024 0CD0     		beq	.L3
ARM GAS  C:\Users\rokko\AppData\Local\Temp\ccKniRtH.s 			page 6


 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   {
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     if ((HAL_GetTick() - tickstart) > HAL_IWDG_DEFAULT_TIMEOUT)
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     {
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       if ((hiwdg->Instance->SR & IWDG_KERNEL_UPDATE_FLAGS) != 0x00u)
  82              		.loc 1 206 32 view .LVU24
  83 0026 0725     		movs	r5, #7
  84              	.LVL3:
  85              	.L6:
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     {
  86              		.loc 1 204 5 is_stmt 1 view .LVU25
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     {
  87              		.loc 1 204 10 is_stmt 0 view .LVU26
  88 0028 FFF7FEFF 		bl	HAL_GetTick
  89              	.LVL4:
  90              		.loc 1 206 17 view .LVU27
  91 002c 2368     		ldr	r3, [r4]
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     {
  92              		.loc 1 204 24 view .LVU28
  93 002e 801B     		subs	r0, r0, r6
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     {
  94              		.loc 1 204 8 view .LVU29
  95 0030 2728     		cmp	r0, #39
  96 0032 02D9     		bls	.L5
  97              		.loc 1 206 7 is_stmt 1 view .LVU30
  98              		.loc 1 206 27 is_stmt 0 view .LVU31
  99 0034 DA68     		ldr	r2, [r3, #12]
 100              		.loc 1 206 10 view .LVU32
 101 0036 1542     		tst	r5, r2
 102 0038 0BD1     		bne	.L9
 103              	.L5:
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   {
 104              		.loc 1 202 9 is_stmt 1 view .LVU33
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   {
 105              		.loc 1 202 26 is_stmt 0 view .LVU34
 106 003a DA68     		ldr	r2, [r3, #12]
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   {
 107              		.loc 1 202 9 view .LVU35
 108 003c 1542     		tst	r5, r2
 109 003e F3D1     		bne	.L6
 110              	.L3:
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       {
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****         return HAL_TIMEOUT;
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       }
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     }
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   }
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* If window parameter is different than current value, modify window
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   register */
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   if (hiwdg->Instance->WINR != hiwdg->Init.Window)
 111              		.loc 1 215 3 is_stmt 1 view .LVU36
 112              		.loc 1 215 22 is_stmt 0 view .LVU37
 113 0040 1969     		ldr	r1, [r3, #16]
 114              		.loc 1 215 43 view .LVU38
 115 0042 E268     		ldr	r2, [r4, #12]
 116              		.loc 1 215 6 view .LVU39
 117 0044 9142     		cmp	r1, r2
 118 0046 06D0     		beq	.L7
ARM GAS  C:\Users\rokko\AppData\Local\Temp\ccKniRtH.s 			page 7


 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   {
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     /* Write to IWDG WINR the IWDG_Window value to compare with. In any case,
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     even if window feature is disabled, Watchdog will be reloaded by writing
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     windows register */
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     hiwdg->Instance->WINR = hiwdg->Init.Window;
 119              		.loc 1 220 5 is_stmt 1 view .LVU40
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   }
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   else
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   {
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     /* Reload IWDG counter with value defined in the reload register */
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****     __HAL_IWDG_RELOAD_COUNTER(hiwdg);
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   }
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* Return function status */
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   return HAL_OK;
 120              		.loc 1 229 10 is_stmt 0 view .LVU41
 121 0048 0020     		movs	r0, #0
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   }
 122              		.loc 1 220 27 view .LVU42
 123 004a 1A61     		str	r2, [r3, #16]
 124              	.LVL5:
 125              	.L2:
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** }
 126              		.loc 1 230 1 view .LVU43
 127              		@ sp needed
 128              	.LVL6:
 129              		.loc 1 230 1 view .LVU44
 130 004c 70BD     		pop	{r4, r5, r6, pc}
 131              	.LVL7:
 132              	.L8:
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   }
 133              		.loc 1 178 12 view .LVU45
 134 004e 0120     		movs	r0, #1
 135              	.LVL8:
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   }
 136              		.loc 1 178 12 view .LVU46
 137 0050 FCE7     		b	.L2
 138              	.LVL9:
 139              	.L9:
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       }
 140              		.loc 1 208 16 view .LVU47
 141 0052 0320     		movs	r0, #3
 142 0054 FAE7     		b	.L2
 143              	.L7:
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   }
 144              		.loc 1 225 5 is_stmt 1 view .LVU48
 145 0056 044A     		ldr	r2, .L15+8
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** }
 146              		.loc 1 229 10 is_stmt 0 view .LVU49
 147 0058 0020     		movs	r0, #0
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   }
 148              		.loc 1 225 5 view .LVU50
 149 005a 1A60     		str	r2, [r3]
 150 005c F6E7     		b	.L2
 151              	.L16:
 152 005e C046     		.align	2
 153              	.L15:
ARM GAS  C:\Users\rokko\AppData\Local\Temp\ccKniRtH.s 			page 8


 154 0060 CCCC0000 		.word	52428
 155 0064 55550000 		.word	21845
 156 0068 AAAA0000 		.word	43690
 157              		.cfi_endproc
 158              	.LFE40:
 160              		.section	.text.HAL_IWDG_Refresh,"ax",%progbits
 161              		.align	1
 162              		.p2align 2,,3
 163              		.global	HAL_IWDG_Refresh
 164              		.syntax unified
 165              		.code	16
 166              		.thumb_func
 168              	HAL_IWDG_Refresh:
 169              	.LVL10:
 170              	.LFB41:
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /**
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @}
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /** @addtogroup IWDG_Exported_Functions_Group2
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *  @brief   IO operation functions
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** @verbatim
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****  ===============================================================================
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****                       ##### IO operation functions #####
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****  ===============================================================================
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****  [..]  This section provides functions allowing to:
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****       (+) Refresh the IWDG.
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** @endverbatim
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @{
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** /**
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @brief  Refresh the IWDG.
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @param  hiwdg  pointer to a IWDG_HandleTypeDef structure that contains
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   *                the configuration information for the specified IWDG module.
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   * @retval HAL status
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   */
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** HAL_StatusTypeDef HAL_IWDG_Refresh(IWDG_HandleTypeDef *hiwdg)
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** {
 171              		.loc 1 259 1 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* Reload IWDG counter with value defined in the reload register */
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   __HAL_IWDG_RELOAD_COUNTER(hiwdg);
 176              		.loc 1 261 3 view .LVU52
 177 0000 0368     		ldr	r3, [r0]
 178 0002 024A     		ldr	r2, .L18
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   /* Return function status */
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c ****   return HAL_OK;
ARM GAS  C:\Users\rokko\AppData\Local\Temp\ccKniRtH.s 			page 9


 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** }
 179              		.loc 1 265 1 is_stmt 0 view .LVU53
 180 0004 0020     		movs	r0, #0
 181              	.LVL11:
 182              		.loc 1 265 1 view .LVU54
 183              		@ sp needed
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** 
 184              		.loc 1 261 3 view .LVU55
 185 0006 1A60     		str	r2, [r3]
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_iwdg.c **** }
 186              		.loc 1 264 3 is_stmt 1 view .LVU56
 187              		.loc 1 265 1 is_stmt 0 view .LVU57
 188 0008 7047     		bx	lr
 189              	.L19:
 190 000a C046     		.align	2
 191              	.L18:
 192 000c AAAA0000 		.word	43690
 193              		.cfi_endproc
 194              	.LFE41:
 196              		.text
 197              	.Letext0:
 198              		.file 2 "c:\\users\\rokko\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 199              		.file 3 "c:\\users\\rokko\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 200              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h"
 201              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 202              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_iwdg.h"
 203              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  C:\Users\rokko\AppData\Local\Temp\ccKniRtH.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_iwdg.c
C:\Users\rokko\AppData\Local\Temp\ccKniRtH.s:18     .text.HAL_IWDG_Init:0000000000000000 $t
C:\Users\rokko\AppData\Local\Temp\ccKniRtH.s:25     .text.HAL_IWDG_Init:0000000000000000 HAL_IWDG_Init
C:\Users\rokko\AppData\Local\Temp\ccKniRtH.s:154    .text.HAL_IWDG_Init:0000000000000060 $d
C:\Users\rokko\AppData\Local\Temp\ccKniRtH.s:161    .text.HAL_IWDG_Refresh:0000000000000000 $t
C:\Users\rokko\AppData\Local\Temp\ccKniRtH.s:168    .text.HAL_IWDG_Refresh:0000000000000000 HAL_IWDG_Refresh
C:\Users\rokko\AppData\Local\Temp\ccKniRtH.s:192    .text.HAL_IWDG_Refresh:000000000000000c $d

UNDEFINED SYMBOLS
HAL_GetTick
